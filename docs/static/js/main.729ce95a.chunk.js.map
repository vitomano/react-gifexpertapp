{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","img","className","src","url","alt","title","GifGrid","category","images","setImages","useEffect","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","id","downsized_medium","console","log","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"iMAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACA,sBAAMC,SAXe,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,MAMtB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCIhBG,EAVK,SAAC,GAAW,IAAVC,EAAS,EAATA,IAElB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC5B,4BAAIL,EAAIK,YC2CLC,EA/CC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAEArB,mBAAS,IAFT,mBAErBsB,EAFqB,KAEbC,EAFa,KAI5BC,qBAAW,WACPC,MACF,CAACJ,IAEH,IAAMI,EAAO,uCAAG,oCAAAC,EAAA,6DAENT,EAFM,iDAE0CU,UAAUN,GAFpD,+DAGOO,MAAOX,GAHd,cAGNY,EAHM,gBAISA,EAAKC,OAJd,gBAILC,EAJK,EAILA,KAEDC,EAAOD,EAAKE,KAAI,SAAAnB,GAAM,IAAD,EACvB,MAAM,CACFoB,GAAIpB,EAAIoB,GACRf,MAAOL,EAAIK,MACXF,IAAG,UAAEH,EAAIQ,cAAN,aAAE,EAAYa,iBAAiBlB,QAI1CmB,QAAQC,IAAIL,GACZT,EAAUS,GAfE,4CAAH,qDAqBb,OACI,qCACA,6BAAKX,IACL,qBAAKN,UAAU,YAAf,SAEIO,EAAOW,KAAI,SAAAnB,GACP,OAAO,cAAC,EAAD,CAEPA,IAAKA,GADAA,EAAIoB,aCHVI,EAhCM,WAAM,MAIatC,mBAAS,IAJtB,mBAIhBuC,EAJgB,KAIJxC,EAJI,KAWvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQwC,EAAWN,KAAK,SAAAO,GAAG,OAEf,aADA,CACC,EAAD,CAEAnB,SAAUmB,GADLA,Y,MCtB7BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.729ce95a.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault()\n\n        if( inputValue.trim().length > 0){\n            setCategories(cats=>[inputValue, ...cats])\n            setInputValue('')\n        }\n\n    }\n\n    return (\n    <form onSubmit={handleSubmit}>\n        <input \n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n        />\n    </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","import React from 'react'\n\nconst GifGridItem = ({img}) => {\n\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={img.url} alt={img.title}/>\n            <p>{img.title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React, {useState, useEffect} from 'react'\nimport GifGridItem from './GifGridItem'\n\nconst GifGrid = ({category}) => {\n\n    const [images, setImages] = useState([])\n\n    useEffect( ()=>{\n        getGifs()\n    },[category])\n    \n    const getGifs = async() =>{\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=aGJ2ySQ5P03cGTeNtv7WESlpmxCdYseE`\n        const resp = await fetch (url)\n        const {data} = await resp.json()\n\n        const gifs = data.map(img=>{\n            return{\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n\n        console.log(gifs)\n        setImages(gifs)\n\n    }\n\n    \n\n    return (\n        <>\n        <h3>{category}</h3>\n        <div className=\"card-grid\">\n            {\n            images.map(img=>{\n                return <GifGridItem \n                key={img.id}\n                img={img}\n                />\n                }\n                )\n            }\n        </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\n\n    const [categories, setCategories] = useState([])\n\n   /*  const handleAdd = () =>{\n        // setCategories([...categories, 'HunterXHunter'])\n        setCategories(cat =>[...categories, 'HunterXHunter'])\n    } */\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n\n            <hr />\n\n            <ol>\n                {\n                    categories.map( cat =>\n                        //<li key={cat}>{cat}</li>\n                        <GifGrid \n                        key={cat}\n                        category={cat}/>\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}